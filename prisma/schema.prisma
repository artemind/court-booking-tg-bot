// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int       @id @default(autoincrement())
  telegramId         BigInt    @unique @map("telegram_id")
  telegramUsername   String    @map("telegram_username")
  name               String
  isAccessRestricted Boolean   @default(false) @map("is_access_restricted")
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @updatedAt @map("updated_at")
  bookings           Booking[]

  @@map("users")
}

model Court {
  id      Int       @id @default(autoincrement())
  name    String
  Booking Booking[]

  @@map("courts")
}

model Booking {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  courtId   Int      @map("court_id")
  dateFrom  DateTime @map("date_from")
  dateTill  DateTime @map("date_till")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  court     Court    @relation(fields: [courtId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("bookings")
}
